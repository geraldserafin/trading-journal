"use client";

import { Button } from "@/ui/button";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/ui/card";
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/ui/form";
import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from "@/ui/input-otp";
import { zodResolver } from "@hookform/resolvers/zod";
import { Label } from "@radix-ui/react-label";
import { useAction } from "next-safe-action/hooks";
import { useForm } from "react-hook-form";
import QRCode from "react-qr-code";
import { z } from "zod";
import { validateTOTP } from "../actions";
import { validateTOTPSchema } from "../schemas";

export default function ValidateOTPForm({ link }: { link?: string }) {
  const form = useForm<z.infer<typeof validateTOTPSchema>>({
    resolver: zodResolver(validateTOTPSchema),
    defaultValues: {
      totp: "",
    },
    progressive: true,
  });

  const { execute, status } = useAction(validateTOTP, {
    onError: (e) => {
      if (e.serverError) {
        form.setError("totp", { message: e.serverError });
      }
    },
  });

  return (
    <Card className="max-w-[360px] w-full">
      <CardHeader>
        <CardTitle>Two-factor authentication</CardTitle>
      </CardHeader>
      <CardContent className="grid gap-4">
        {link && (
          <div className="grid gap-2">
            <Label className="text-sm font-semibold">QR Code</Label>
            <QRCode value={link} />
            <p className="text-muted-foreground text-sm">
              Scan the QR code with an authentication app (e.g. Google Authenticator)
            </p>
          </div>
        )}
        <Form {...form}>
          <form
            id="validate-otp-form"
            className="grid justify-center"
            onSubmit={form.handleSubmit(execute)}
          >
            <FormField
              control={form.control}
              name="totp"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Generated Code</FormLabel>
                  <FormControl>
                    <InputOTP
                      disabled={status === "executing"}
                      maxLength={6}
                      autoFocus={true}
                      {...field}
                    >
                      <InputOTPGroup>
                        <InputOTPSlot index={0} />
                        <InputOTPSlot index={1} />
                        <InputOTPSlot index={2} />
                      </InputOTPGroup>
                      <InputOTPSeparator />
                      <InputOTPGroup>
                        <InputOTPSlot index={3} />
                        <InputOTPSlot index={4} />
                        <InputOTPSlot index={5} />
                      </InputOTPGroup>
                    </InputOTP>
                  </FormControl>
                  <FormDescription>Enter the code generated by your authentication app.</FormDescription>
                  <FormMessage />
                </FormItem>
              )}
            />
          </form>
        </Form>
      </CardContent>
      <CardFooter className="flex justify-between">
        <Button
          disabled={status === "executing"}
          type="submit"
          form="validate-otp-form"
          className="w-full"
        >
          Verify
        </Button>
      </CardFooter>
    </Card>
  );
}
